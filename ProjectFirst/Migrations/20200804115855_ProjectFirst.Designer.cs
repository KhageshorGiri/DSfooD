// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProjectFirst.Data;

namespace ProjectFirst.Migrations
{
    [DbContext(typeof(FirstContext))]
    [Migration("20200804115855_ProjectFirst")]
    partial class ProjectFirst
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ProjectFirst.Models.Address", b =>
                {
                    b.Property<int>("AddressID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("MunicipalityID")
                        .HasColumnType("int");

                    b.Property<string>("StreetAddress")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("AddressID");

                    b.HasIndex("MunicipalityID");

                    b.ToTable("Address");
                });

            modelBuilder.Entity("ProjectFirst.Models.Category", b =>
                {
                    b.Property<int>("CategoryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CategoryName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DisplayOrder")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CategoryID");

                    b.ToTable("Category");
                });

            modelBuilder.Entity("ProjectFirst.Models.Client", b =>
                {
                    b.Property<int>("ClientID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AddressID")
                        .HasColumnType("int");

                    b.Property<int>("CartID")
                        .HasColumnType("int");

                    b.Property<string>("ClientName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DateOfBirth")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PermanentAddressID")
                        .HasColumnType("int");

                    b.Property<string>("PhoneNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RefferClientCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TemporaryAddressID")
                        .HasColumnType("int");

                    b.HasKey("ClientID");

                    b.ToTable("Client");
                });

            modelBuilder.Entity("ProjectFirst.Models.Comments", b =>
                {
                    b.Property<int>("CommentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ClientID")
                        .HasColumnType("int");

                    b.Property<string>("Comment1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Rating")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CommentID");

                    b.HasIndex("ClientID");

                    b.ToTable("Comments");
                });

            modelBuilder.Entity("ProjectFirst.Models.Coupen", b =>
                {
                    b.Property<int>("CoupenID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("CoupenCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CoupenName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CoupenID");

                    b.ToTable("Coupen");
                });

            modelBuilder.Entity("ProjectFirst.Models.DeliveryInformation", b =>
                {
                    b.Property<int>("DeliveryInformationID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ClientID")
                        .HasColumnType("int");

                    b.Property<int?>("DeliverymansID")
                        .HasColumnType("int");

                    b.Property<int?>("DeliverymansID1")
                        .HasColumnType("int");

                    b.Property<string>("Signature")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DeliveryInformationID");

                    b.HasIndex("ClientID");

                    b.HasIndex("DeliverymansID1");

                    b.ToTable("DeliveryInformation");
                });

            modelBuilder.Entity("ProjectFirst.Models.Deliveryman", b =>
                {
                    b.Property<int>("DeliverymansID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CitizenshipNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeliverymanName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DeliverymansID");

                    b.ToTable("Deliveryman");
                });

            modelBuilder.Entity("ProjectFirst.Models.District", b =>
                {
                    b.Property<int>("DistrictID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DistrictName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("StateID")
                        .HasColumnType("int");

                    b.HasKey("DistrictID");

                    b.HasIndex("StateID");

                    b.ToTable("District");
                });

            modelBuilder.Entity("ProjectFirst.Models.GifCard", b =>
                {
                    b.Property<int>("GifCardID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GifCardName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("GifCardID");

                    b.ToTable("GifCard");
                });

            modelBuilder.Entity("ProjectFirst.Models.Municipality", b =>
                {
                    b.Property<int>("MunicipalityID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("DistrictID")
                        .HasColumnType("int");

                    b.Property<string>("MunicipalityName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MunicipalityID");

                    b.HasIndex("DistrictID");

                    b.ToTable("Municipality");
                });

            modelBuilder.Entity("ProjectFirst.Models.Order", b =>
                {
                    b.Property<int>("OrderID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ClientID")
                        .HasColumnType("int");

                    b.Property<string>("DeliveryTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ProductID")
                        .HasColumnType("int");

                    b.Property<int?>("paymentId")
                        .HasColumnType("int");

                    b.HasKey("OrderID");

                    b.HasIndex("ClientID");

                    b.HasIndex("ProductID");

                    b.HasIndex("paymentId");

                    b.ToTable("Order");
                });

            modelBuilder.Entity("ProjectFirst.Models.Payment", b =>
                {
                    b.Property<int>("PaymentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ClientID")
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CoupenCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Date")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("OrderID")
                        .HasColumnType("int");

                    b.Property<decimal?>("PayedAmount")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("PaymentID");

                    b.HasIndex("ClientID");

                    b.ToTable("Payment");
                });

            modelBuilder.Entity("ProjectFirst.Models.Product", b =>
                {
                    b.Property<int>("ProductID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("Discount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ProductSubCategoryID")
                        .HasColumnType("int");

                    b.Property<decimal?>("Quantity")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("SupplierAttributesuppilerAttributeID")
                        .HasColumnType("int");

                    b.Property<int?>("SuppliersAttributeID")
                        .HasColumnType("int");

                    b.HasKey("ProductID");

                    b.HasIndex("ProductSubCategoryID");

                    b.HasIndex("SupplierAttributesuppilerAttributeID");

                    b.ToTable("Product");
                });

            modelBuilder.Entity("ProjectFirst.Models.ProductSubCategory", b =>
                {
                    b.Property<int>("ProductSubCategoryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("Available")
                        .HasColumnType("bit");

                    b.Property<int?>("DisplayOrder")
                        .HasColumnType("int");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductSubCategoryName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Rate")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ProductSubCategoryID");

                    b.ToTable("ProductSubCategory");
                });

            modelBuilder.Entity("ProjectFirst.Models.State", b =>
                {
                    b.Property<int>("StateID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("StateName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StateID");

                    b.ToTable("State");
                });

            modelBuilder.Entity("ProjectFirst.Models.Supplier", b =>
                {
                    b.Property<int>("SuppliersID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SuppliersName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SuppliersID");

                    b.ToTable("Supplier");
                });

            modelBuilder.Entity("ProjectFirst.Models.SupplierAttribute", b =>
                {
                    b.Property<int>("suppilerAttributeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("PaidAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("SuppilerID")
                        .HasColumnType("int");

                    b.Property<decimal?>("TotalAmount")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("suppilerAttributeID");

                    b.HasIndex("SuppilerID");

                    b.ToTable("SupplierAttribute");
                });

            modelBuilder.Entity("ProjectFirst.Models.Address", b =>
                {
                    b.HasOne("ProjectFirst.Models.Municipality", "Municipality")
                        .WithMany("Addresses")
                        .HasForeignKey("MunicipalityID");
                });

            modelBuilder.Entity("ProjectFirst.Models.Comments", b =>
                {
                    b.HasOne("ProjectFirst.Models.Client", "Client")
                        .WithMany("Comment")
                        .HasForeignKey("ClientID");
                });

            modelBuilder.Entity("ProjectFirst.Models.DeliveryInformation", b =>
                {
                    b.HasOne("ProjectFirst.Models.Client", "Client")
                        .WithMany("DeliveryInformations")
                        .HasForeignKey("ClientID");

                    b.HasOne("ProjectFirst.Models.Deliveryman", "Deliveryman")
                        .WithMany("DeliveryInformations")
                        .HasForeignKey("DeliverymansID1");
                });

            modelBuilder.Entity("ProjectFirst.Models.District", b =>
                {
                    b.HasOne("ProjectFirst.Models.State", "State")
                        .WithMany("Districts")
                        .HasForeignKey("StateID");
                });

            modelBuilder.Entity("ProjectFirst.Models.Municipality", b =>
                {
                    b.HasOne("ProjectFirst.Models.District", "District")
                        .WithMany("Municipalities")
                        .HasForeignKey("DistrictID");
                });

            modelBuilder.Entity("ProjectFirst.Models.Order", b =>
                {
                    b.HasOne("ProjectFirst.Models.Client", "Client")
                        .WithMany("Orders")
                        .HasForeignKey("ClientID");

                    b.HasOne("ProjectFirst.Models.Product", "Product")
                        .WithMany("Orders")
                        .HasForeignKey("ProductID");

                    b.HasOne("ProjectFirst.Models.Payment", "Payment")
                        .WithMany("Orders")
                        .HasForeignKey("paymentId");
                });

            modelBuilder.Entity("ProjectFirst.Models.Payment", b =>
                {
                    b.HasOne("ProjectFirst.Models.Client", "Client")
                        .WithMany("Payments")
                        .HasForeignKey("ClientID");
                });

            modelBuilder.Entity("ProjectFirst.Models.Product", b =>
                {
                    b.HasOne("ProjectFirst.Models.ProductSubCategory", "ProductSubCategory")
                        .WithMany("Products")
                        .HasForeignKey("ProductSubCategoryID");

                    b.HasOne("ProjectFirst.Models.SupplierAttribute", "SupplierAttribute")
                        .WithMany("Products")
                        .HasForeignKey("SupplierAttributesuppilerAttributeID");
                });

            modelBuilder.Entity("ProjectFirst.Models.SupplierAttribute", b =>
                {
                    b.HasOne("ProjectFirst.Models.Supplier", "Suppiler")
                        .WithMany("SupplierAttributes")
                        .HasForeignKey("SuppilerID");
                });
#pragma warning restore 612, 618
        }
    }
}
